#!wing
#!version=4.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {None: {},
                    loc('simradio.py'): {}}
debug.var-col-widths = [0.39625360230547552,
                        0.60374639769452454]
edit.file-encoding = {loc('chaco_test.py'): 'utf-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'MGne2xlUZYBnpRK9LSfJE64wcB'\
        'r8GNe7',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'page_orders': [],
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(1,),
        (1,
         0),
        (2,),
        (2,
         0)],
                                 'selected-nodes': [(7,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': [['class',
                 'all',
                 '']]}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('chaco_test.py'),
                      '')]}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          7],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'page_orders': [],
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.80000000000000004,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['class Speaker():\tname = \xe2\x80'\
        '\x9dDan-Erik\xe2\x80\x9d\x0b\tdef greet(self):\x0b\t\tprint \xe2\x80'\
        '\x9dHello \xe2\x80\x9d + name\n',
        'class Speaker():\n\tname = \xe2\x80\x9dDan-Erik\xe2\x80\x9d\n\tdef '\
        'greet(self):\n\t\tprint \xe2\x80\x9dHello \xe2\x80\x9d + name\n\n',
        'class Speaker():\ndef __init__(self):\nname = "Dan-Erik"\n\n',
        'class Speaker():\n\tdef __init__():\n\t\tname = "Dan-Erik"\n\tdef g'\
        'reet():\n\t\tprint "Hello " + name\n\n',
        'class Speaker():\n\tdef __init__(self):\n\t\tname = "Dan-Erik"\n\td'\
        'ef greet():\n\t\tprint "Hello " + name\n\n',
        'class Speaker():\n\tdef __init__(self):\n\t\tname = "Dan-Erik"\n\td'\
        'ef greet(self):\n\t\tprint "Hello " + name\n\n',
        'class Speaker():\n\tdef __init__(self):\n\t\tname = "Dan-Erik"\n\td'\
        'ef greet(self):\n\t\tprint "Hello " + self.name\n\n',
        'class Speaker():\nname = "Dan-Erik"\n\tdef greet(self):\n\t\tprint '\
        '"Hello " + self.name\n\n',
        'class Speaker():\n\tname = "Dan-Erik"\n\tdef greet(self):\n\t\tprin'\
        't "Hello " + self.name\n\n',
        'me = Speaker()\n',
        'me.greet()\n',
        'me.name = "yourname"\n',
        'me.name\n',
        '"Navinder".index(1)\n',
        'str("Navinder").index(1)\n',
        'str("Navinder").strip(1,1)\n',
        'str("Navinder").strip(1)\n',
        'str("Navinder").strip(a)\n',
        "str(\"Navinder\").strip('a')\n",
        'str("Navinder")[1:3]\n',
        'import pyRserve\n',
        'def navi():\n    return 1\nnavi()\n\n',
        'import rfid\n',
        "class TagformatException(Exception):\n\tdef __init__(self, tagforma"\
        "t):\n\t\tself.tagformat = tagformat\n\tdef __str__(self):\n\t\tretu"\
        "rn repr(tagformat)\n###############################################"\
        "#########################\nclass pittag():\n\t\"\"\"RFID tag format"\
        "ting and storage class\n\t\n\tReturns error text if anything goes w"\
        "rong.\"\"\"\n\n\t#-------------------------------------------------"\
        "---------------------\n\tdef __init__(self, tagid, tagformat=\"DEC\""\
        ", separator='.', tagtype='F', return_type=False):\n\t\t\"\"\"Constr"\
        "uctor\n\t\tSets tagformat on creation; HEX or DEC (defaults to DEC)"\
        "\n\t\tDefault separator is . which means default output format is X"\
        "XX.XXXXXXXXXXXX where X is a decimal number\n\t\t\\\"manufacturer\\"\
        "\" and \\\"idnum\\\" can be fetched as integers, otherwise output i"\
        "s in string form.\n\t\t\\\"tagtype\\\" should be \\'F\\' for FDX an"\
        "d \\'H\\' for HDX.\n\t\t\"\"\"\n\t\t\n\t\tself.tagformat = tagforma"\
        "t\n\t\tself.separator = separator\n\t\tself.tagtype = tagtype\n\t\t"\
        "self.return_type = return_type\n\t\ttry:\n\t\t\tif tagformat == \"D"\
        "EC\":\n\t\t\t\tself.manufacturer, self.idnum = [int(x) for x in tag"\
        "id.split(separator)]\n\t\t\telif tagformat == \"HEX\":\n\t\t\t\tsel"\
        "f.manufacturer, self.idnum = [int(x,16) for x in tagid.split(separa"\
        "tor)]\n\t\t\telse:\n\t\t\t\traise TagformatException(tagformat)\n\t"\
        "\texcept TagformatException as tte:\n\t\t\treturn \"{0} is not a va"\
        "lid tag format.\".format(tte.tagformat)\n\t\texcept:\n\t\t\traise\n"\
        "\n\tdef __str__(self):\n\t\t\"\"\"Returns tag in DEC format (\\\"XX"\
        "X.XXXXXXXXXXXX\\\")\n\t\tor, if return_type is set to True; returns"\
        " tag with tag type (\\\"T.XXX.XXXXXXXXXXXX\\\").\"\"\"\n\t\tif self"\
        ".return_type:\n\t\t\treturn \"{:0>3}{:}{:0>12}\".format(self.manufa"\
        "cturer, self.separator, self.idnum)\n\t\telse:\n\t\t\treturn \"{:}{"\
        ":}{:0>3}{:}{:0>12}\".format(self.tagtype, self.separator, self.manu"\
        "facturer, self.separator, self.idnum)\n\n\tdef to_hex(self):\n\t\t\""\
        "\"\"Returns tag in HEX format (\\\"XXX.XXXXXXXXXX\\\")\"\"\"\n\t\tr"\
        "eturn \"{:0>3X}{:}{:0>10X}\".format(self.manufacturer, self.separat"\
        "or, self.idnum)\n\n\n",
        'pittag??\n',
        'pittag()??\n',
        'pittag\n',
        'pittag(??)\n',
        '?pittag\n',
        '??pittag\n',
        'pittag?\n',
        '[int(i) for i in range(10)]\n',
        'a = [int(i) for i in range(10)]\n',
        'a\n',
        'a[1]\n']},
                       'sel-line': 2,
                       'sel-line-start': 145,
                       'selection_end': 145,
                       'selection_start': 145}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u') + ")")',
                                       'fReverse': False,
                                       'fSearchText': u'random',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [('eval',
        'a'),
                                       ('eval',
        'textitems'),
                                       ('eval',
        'h'),
                                       ('eval',
        'header')],
                       'tree-state': {'column-widths': [0.38677918424753865,
        0.61322081575246135],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': {'bookmarks': ([(loc('simradio/simrad/__init__.py'),
        {'attrib-starts': [('ek60',
                            23),
                           ('ek60.readraw',
                            31)],
         'first-line': 30,
         'folded-linenos': [],
         'sel-line': 43,
         'sel-line-start': 1333,
         'selection_end': 1348,
         'selection_start': 1348},
        1344268317.8959999),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [('ek60',
                             23),
                            ('ek60.readraw',
                             31)],
          'first-line': 30,
          'folded-linenos': [],
          'sel-line': 40,
          'sel-line-start': 1239,
          'selection_end': 1290,
          'selection_start': 1290},
         1344268326.506),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [('ek60',
                             23),
                            ('ek60.readraw',
                             31)],
          'first-line': 33,
          'folded-linenos': [],
          'sel-line': 50,
          'sel-line-start': 1666,
          'selection_end': 1700,
          'selection_start': 1700},
         1344268363.523),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [('ek60',
                             23),
                            ('ek60.readraw',
                             31)],
          'first-line': 81,
          'folded-linenos': [],
          'sel-line': 110,
          'sel-line-start': 5068,
          'selection_end': 5131,
          'selection_start': 5131},
         1344268736.381),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [('ek60',
                             23),
                            ('ek60.readraw',
                             31)],
          'first-line': 96,
          'folded-linenos': [],
          'sel-line': 113,
          'sel-line-start': 5321,
          'selection_end': 5381,
          'selection_start': 5381},
         1344269076.8659999),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [('ek60',
                             23),
                            ('ek60.readraw',
                             31)],
          'first-line': 81,
          'folded-linenos': [],
          'sel-line': 115,
          'sel-line-start': 5571,
          'selection_end': 5571,
          'selection_start': 5571},
         1344269752.8559999),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [],
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344270012.3740001),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8884,
          'selection_end': 8919,
          'selection_start': 8919},
         1344270123.362),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [],
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344270152.7149999),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8884,
          'selection_end': 8943,
          'selection_start': 8943},
         1344270162.822),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [],
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344270201.72),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8884,
          'selection_end': 8969,
          'selection_start': 8969},
         1344270206.302),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [],
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344270215.707),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8884,
          'selection_end': 8987,
          'selection_start': 8987},
         1344270218.826),
        (loc('simradio/simrad/__init__.py'),
         {'attrib-starts': [],
          'first-line': 89,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1344270230.7980001),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8884,
          'selection_end': 8976,
          'selection_start': 8976},
         1344270233.168),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 222,
          'sel-line-start': 8741,
          'selection_end': 8777,
          'selection_start': 8777},
         1344270253.2579999),
        (loc('simradio.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 14,
          'sel-line-start': 301,
          'selection_end': 301,
          'selection_start': 301},
         1344270405.3399999),
        (loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 222,
          'sel-line-start': 8741,
          'selection_end': 8777,
          'selection_start': 8777},
         1344270408.5999999),
        [loc('simradio/simradio.py'),
         {'attrib-starts': [('Window',
                             191),
                            ('Window.__init__',
                             195)],
          'first-line': 198,
          'folded-linenos': [],
          'sel-line': 224,
          'sel-line-start': 8845,
          'selection_end': 8845,
          'selection_start': 8845},
         1344270417.342]],
        19),
        'current-loc': loc('simradio/simradio.py'),
        'editor-states': {loc('setup.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 33,
        'sel-line-start': 972,
        'selection_end': 1014,
        'selection_start': 1014},
                          loc('simradio.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 301,
        'selection_end': 301,
        'selection_start': 301},
                          loc('simradio/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 499,
        'selection_end': 540,
        'selection_start': 540},
                          loc('simradio/simrad/__init__.py'): {'attrib-start'\
        's': [],
        'first-line': 89,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                          loc('simradio/simradio.py'): {'attrib-starts': [(''\
        'Window',
        191),
        ('Window.__init__',
         195)],
        'first-line': 198,
        'folded-linenos': [],
        'sel-line': 222,
        'sel-line-start': 8741,
        'selection_end': 8774,
        'selection_start': 8774}},
        'has-focus': True},
                               'open_files': [u'setup.py',
        u'simradio/__init__.py',
        u'simradio/simrad/__init__.py',
        u'simradio.py',
        u'simradio/simradio.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (65,
                         24,
                         1299,
                         714)}]}
guimgr.recent-documents = [loc('simradio/simradio.py'),
                           loc('simradio.py'),
                           loc('simradio/simrad/__init__.py'),
                           loc('simradio/__init__.py'),
                           loc('setup.py')]
guimgr.visual-state = {loc('../../../../../../Python27/Lib/site-packages/PyQt4/QtGui.pyd'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../Python27/Lib/site-packages/chaco/colormapped_scatterplot.py'): {''\
        'attrib-starts': [('ColormappedScatterPlot',
                           32),
                          ('ColormappedScatterPlot.map_screen',
                           83)],
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 93,
        'sel-line-start': 3446,
        'selection_end': 3446,
        'selection_start': 3446},
                       loc('../../../../../../Python27/Lib/site-packages/kiva/agg/agg.py'): {''\
        'attrib-starts': [('GraphicsContextArray',
                           745),
                          ('GraphicsContextArray.set_fill_color',
                           852)],
        'first-line': 824,
        'folded-linenos': [],
        'sel-line': 861,
        'sel-line-start': 31845,
        'selection_end': 31845,
        'selection_start': 31845},
                       loc('../../../../../../Python27/Lib/site-packages/traits/trait_handlers.py'): {''\
        'attrib-starts': [('BaseTraitHandler',
                           116),
                          ('BaseTraitHandler.error',
                           149)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 169,
        'sel-line-start': 6154,
        'selection_end': 6154,
        'selection_start': 6154},
                       loc('AUTHORS.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 59,
        'selection_end': 59,
        'selection_start': 59},
                       loc('README.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('chaco_test.py'): {'attrib-starts': [],
        'first-line': 45,
        'folded-linenos': [],
        'sel-line': 57,
        'sel-line-start': 2098,
        'selection_end': 2112,
        'selection_start': 2112},
                       loc('share/icons/aideasypea.svg'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('simradio.desktop.in'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 101,
        'selection_end': 114,
        'selection_start': 114}}
proj.env-vars = {loc('chaco_test.py'): ('project',
        ['']),
                 loc('simradio.py'): ('project',
                                      ['']),
                 loc('simradio/simradio.py'): ('project',
        [''])}
search.search-history = [u'random',
                         u'ChacoVisualization',
                         u'configure',
                         u'visual']
